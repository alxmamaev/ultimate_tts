feature_extractor_params:
    sample_rate: 22050
    audio_max_value: 32768
    n_fft: 400
    n_mels: 80
    f_min: 80
    f_max: 8000
    win_length: 400
    hop_length: 200
    power: 1.0

shared:
  vocab: " .,!?abcdefghijklmnopqrstuvwxyz"
  train_metadata: "./data/train_metadata.csv"
  valid_metadata: "./data/valid_metadata.csv"
  datapath: "./data/mels"
  seed: &seed 42
  valid_loader: &valid_loader valid
  valid_metric: &valid_metric loss
  minimize_valid_metric: &minimize_valid_metric True


args:
  expdir: "src"
  logdir: &logdir "./logs/"
  seed: *seed
  distributed: False
  apex: False
  amp: False
  verbose: False
  timeit: False
  check: False
  overfit: False
  deterministic: False
  benchmark: False

runner:
  _target_: TTSRunner
  input_key: &model_input ["texts", "mask", "mels"]
  output_key: &model_output "model_output"
  target_key: &model_target "targets"
  loss_key: &model_loss "loss"

engine:
  _target_: DeviceEngine

loggers:
  console:
    _target_: ConsoleLogger
  tensorboard:
    _target_: TensorboardLogger
    logdir: *logdir

model:
  _target_: Tacotron2
  vocab_size: 32
  num_mels: 80
  vocab_embedding_size: 512
  encoder_embedding_size: 512
  encoder_n_convolutions: 3
  encoder_kernel_size: 5
  prenet_layer_size: 256
  decoder_embedding_size: 512
  attention_embedding_size: 128
  attention_location_n_filters: 32
  attention_location_kernel_size: 31
  postnet_n_convolutions: 5
  postnet_kernel_size: 5

stages:
  train:
    num_epochs: 10

    loaders: &loaders
      batch_size: 3
      num_workers: 0

    criterion:
      _target_: Tacotron2Loss

    optimizer:
      _target_: Adam
      lr: 0.0001

    callbacks: &callbacks
      loss:
        _target_: CriterionCallback
        input_key: *model_output
        target_key: *model_target
        metric_key: *model_loss
      optimizer:
        _target_: OptimizerCallback
        metric_key: *model_loss
        grad_clip_params:
          fn_name: clip_grad_value_
          clip_value: 1.0
      alignments:
        _target_: TacotronOutputLogger
        input_key: *model_output
      saver:
        _target_: CheckpointCallback
        logdir: *logdir
        loader_key: *valid_loader
        metric_key: *valid_metric
        minimize: *minimize_valid_metric
        use_logdir_postfix: True
      verbose:
        _target_: TqdmCallback